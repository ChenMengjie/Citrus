{
    "contents" : "#' A function to make plot for ...\nplot.CitrusReport <- function(X, SampleColVector = NULL, save = FALSE, name = NULL, ...){\n  colorlist <- c(\"red\", \"violet\", \"blue\", \"gold\", \"slateblue1\", \"limegreen\",  \"skyblue1\", \"khaki\", \n                 \"pink\", \"chocolate\", \"salmon\",  \"maroon\", \"cyan\", \"lavender\", \n                 \"purple\", \"yellow\", \"turquoise4\")\n  l <- length(unique(X$Cluster))\n  if(l > length(colorlist)){\n    colorlist <- rainbow(l)\n  }\n\n  require(gplots)\n  palette.gr.marray <- colorRampPalette(c(\"blue\", \"white\", \"red\"))(56)\n  if(class(X) != \"CitrusReport\"){\n    stop(\"Input must be a CitrusReport!\")\n  } else {\n    Cluster <- X$Cluster\n    Mu <- X$Mu\n    reordered <- .reorderClusterByMu(Cluster, Mu)\n    res <- .reorderAmat(Cluster, reordered, X$Denoised)\n    newOrder <- .reorderAvec(Cluster, reordered)  \n    \n    if(!is.null(SampleColVector)){\n      if(is.null(nrow(SampleColVector))){\n        if(length(SampleColVector) != nrow(res)){\n          stop(\"The length of SampleColVector is not equal to the number of samples in the data!\")\n        } else {  \n          colorMat <- cbind(colorlist[Cluster[newOrder]], SampleColVector[newOrder])\n        }\n      } else {\n        if(nrow(SampleColVector) != nrow(res)){\n          stop(\"The number of rows of SampleColVector is not equal to the number of samples in the data!\")\n        } else {\n          colorMat <- cbind(colorlist[Cluster[newOrder]], SampleColVector[newOrder, ])\n        }\n      }\n    } else {\n      colorMat <- matrix(colorlist[Cluster[newOrder]], ncol = 1)\n    }\n    if(save == TRUE){\n      if(is.null(name)){\n        filename <-  paste0(getwd(), \"/CitrusClusteringHeatmap.png\")\n      } else {\n        filename <- name\n      }\n      png(filename, width = 10, height = 10, unit = \"in\", res = 400)  \n      heatmap.3(as.matrix(t(res)), trace = \"none\", col = palette.gr.marray, margins = c(5, 5), symbreaks = T, \n                labRow = NA, labCol = NA, dendrogram = \"none\", ColSideColors = colorMat, Colv = FALSE, ...)\n      dev.off()\n    } else {\n    heatmap.3(as.matrix(t(res)), trace = \"none\", col = palette.gr.marray, margins = c(5, 5), symbreaks = T, \n              labRow = NA, labCol = NA, dendrogram = \"none\", ColSideColors = colorMat, Colv = FALSE, ...)\n    }\n  }\n}\n",
    "created" : 1452571778209.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3845320585",
    "id" : "9599D483",
    "lastKnownWriteTime" : 1446042846,
    "path" : "~/Google Drive/Software/Citrus-master/R/plot.CitrusReport.R",
    "project_path" : "R/plot.CitrusReport.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}